@Library('jc21') _

pipeline {
	options {
		buildDiscarder(logRotator(numToKeepStr: '10'))
		disableConcurrentBuilds()
		ansiColor('xterm')
	}
	agent {
		label 'rpm'
	}
	stages {
		stage('Build') {
			steps {
				rpmBuild(9, 'rust')
				rpmSign()
			}
		}
		stage('Publish') {
			steps {
				dir(path: 'RPMS') {
					archiveArtifacts(artifacts: '**/*/*.rpm', caseSensitive: true, onlyIfSuccessful: true)
				}
				dir(path: 'SRPMS') {
					archiveArtifacts(artifacts: '**/*.src.rpm', caseSensitive: true, onlyIfSuccessful: true, allowEmptyArchive: true)
				}
				rpmGithubRelease()
			}
		}
	}
	post {
		success {
			juxtapose event: 'success'
			sh 'figlet "SUCCESS"'
		}
		failure {
			juxtapose event: 'failure'
			sh 'figlet "FAILURE"'
		}
	}
}
